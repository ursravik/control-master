#  Enable root login just in case ldap access does not work post reboot
#  Update server
#  Copy list of packages updated during patching in log file and copy the contents back to control node for any bau troubleshooting
#  Reboot server post patching
#  Wait for server to boot up
#  All the above will be executed only if server is registered and packages are found to update

- stat: path=/tmp/repoinfo-{{ inventory_hostname }}
  register: zyrepoinfo


- block:
  - name: Enable root login before patching
    lineinfile: dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin yes" state=present backup=yes

  - name: "Capture and report number of packages to update"
    shell: 'zypper list-updates | grep "^v" | wc -l'
    register: zyupnu
  - name: Report to user about number of patches to be applied and server reboot 
    mail:
      host: relay.domain.com
      port: 25
      to: email@in.com
      subject: 'OS Update of {{ inventory_hostname }} is starting now.'
      body: "On {{ inventory_hostname }} {{ zyupnu.stdout }} packages will be applied and reboot shortly"
    delegate_to: localhost

  - name: check uptime greater than 180 days to perform prereboot
    shell: |
      [[ -f /tmp/uptime180 ]] && rm /tmp/uptime180
      uti=`uptime | awk '{print $3}'`
      if [ $uti -gt 180 ]
      then
      touch /tmp/uptime180
      fi
      exit 0
  - name: check if uptime flag exists on server if yes reboot before os update
    stat:
      path: /tmp/uptime180
    register: uptime180
  - name: Rebooting if uptime greater than 180 days
    shell: sleep 2 && /sbin/shutdown -r now "Reboot required server up more than 180 days" && sleep 2
    async: 20
    poll: 0
    when: uptime180.stat.exists
  - name: Waiting for server to reboot
    wait_for_connection:
      delay: 60
      timeout: 900
    when: uptime180.stat.exists
      
  - name: "Perform server UPDATE"
    zypper: name='*' state=latest
    register: upinfo
  - local_action:
      module: copy
      content: "{{ upinfo.stdout }}"
      dest: ./patching-log/patchstatus-{{ inventory_hostname }}.{{ansible_date_time.date}}.log

  - name: Rebooting server
    shell: sleep 2 && /sbin/shutdown -r now "Reboot required post patching." && sleep 2
    async: 20
    poll: 0
  - name: Waiting for server to reboot
    wait_for_connection:
      delay: 60
      timeout: 900
  when: not zyrepoinfo.stat.exists
  rescue:
    - name: Send mail to admin reporting patching and reboot not working
      mail:
        host: relay.domain.com
        port: 25
        to: email@in.com
        subject: System {{ ansible_hostname }}patching and reboot not working
        body: " System {{ ansible_hostname }} patching and reboot not working, check in console. "
      delegate_to: localhost

