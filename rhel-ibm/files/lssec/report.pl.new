#!/usr/bin/perl
use strict;
use warnings;
use HTTP::Request::Common;
use LWP::UserAgent;
use LWP::Simple;
use Net::Domain qw(hostfqdn);

my $host = 'http://stgsec.raleigh.ibm.com:2036/services/bin/patchtest/patch.pl';
# This is a helper to slurp up files
sub slurp($) {
    my $file = shift;

    open my $slurpy, '<', $file or die "Cannot open $file: $!";
    return do { local $/; <$slurpy> };
}

sub create {
    my $ua = LWP::UserAgent->new;
    my $book_data = slurp(shift);

    # POST /=/model/book
    my $response = $ua->request(
        POST $host . '/=/model/book',
        'Content-Type' => 'text/yaml',
        Content        => $book_data
    );

    # On success, return the new ID assigned to the resource
    if ( $response->is_success ) {
        my $url = $response->header('Location');
        my ($id) = $url =~ /([\d-]+)$/;
        print "$id: $url\n";
    } else {
        my ($title)   = $response->content =~ m{<h1>([^<]+)</h1>};
        my ($message) = $response->content =~ m{<p>([^<]+)</p>};
        die "ERROR $title: $message\n";
    }
};

my $tstamp   = time;
my $lssecdir = "/tmp/.lssec.$tstamp";
`mkdir -p $lssecdir`;
my $lssecfile   = "$lssecdir/$tstamp.tar";
my $hostname    = hostfqdn();
my $localip     = join qw{.}, unpack 'C*', gethostbyname $hostname ;
my $lssecreport = $lssecdir . qw{/} . $hostname . qw{-} . $localip;
my $lssectar    = get
'http://rchgsa.rchland.ibm.com/projects/r/rchisgsecurity/tools/lssecfixes/lssecfixes.tar.gz';

my $LSSEC;
open $LSSEC, '>', $lssecfile or die 'Could not open lssec output file';
print {$LSSEC} $lssectar or die 'Could not write lssec output file';
close $LSSEC or die 'Could not close lssec output file';

my $extract     = `cd $lssecdir && gunzip -c $lssecfile | tar xf -`;
my $lssecver    = `$lssecdir/bin/lssecfixes --version`;
my $lssecoutput = `$lssecdir/bin/lssecfixes -a -F -f -H -s other -t'~~' 2>&1 | grep -v 'Running as a user other than root may produce erroneous results'`;

# transform output so yaml can read it
$lssecoutput =~ s/^/ - Patch: /mg;
$lssecoutput =~ s/ - Patch: # fixDB = /FixDB: /;
$lssecoutput =~ s/\n/\nPatchState:\n/m;

open $LSSEC, '>', $lssecreport or die 'Could not open report file';
print {$LSSEC} <<"EOF";
Hostname: $hostname
IP: $localip
Version: $lssecver
$lssecoutput

EOF
close $LSSEC or die 'Could not close report file';
create($lssecreport);

#`rm -rf $lssecdir`;
