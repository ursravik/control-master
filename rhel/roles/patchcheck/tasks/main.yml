#  check if server is registered and there are patches to update
#  Register the value, so it can be used as a condition to patch. If server is not registered or no packages found then patching
#  process will be skipped for that server.
- name: Check if there are packages to update
  shell: |
    yum check-update | grep ^[a-Z] | grep updates | wc -l
  ignore_errors: yes
  register: packages
  tags: pachk
- debug:
    msg: "System {{ inventory_hostname }} not registered or no packages found to update"
  when: packages.stdout  == "0"
  tags: pachk
- name: Check if there are packages to update
  shell: |
    yum check-update | grep ^[a-Z] | grep updates 
  ignore_errors: yes
  register: packinfo
  tags: pachk
- local_action:
    module: copy
    content: "{{ packinfo.stdout }}"
    dest: ./patching-log/repoinfo-{{ inventory_hostname }}.{{ansible_date_time.date}}.log
  tags: pachk
  when: packages.stdout != "0"
- name: Remove old /tmp/repoinfo-servername
  file:
    path: /tmp/repoinfo-{{ inventory_hostname }}
    state: absent
  tags: pachk
- name: Copy repo info to /tmp/repoinfo-servername
  copy:
    dest: /tmp/repoinfo-{{ inventory_hostname }}
    content: "{{ packages.stdout }}"
  when: packages.stdout  == "0"
  tags: pachk
